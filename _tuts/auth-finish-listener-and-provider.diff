diff --git a/src/KnpU/CodeBattle/Security/Authentication/ApiTokenListener.php b/src/KnpU/CodeBattle/Security/Authentication/ApiTokenListener.php
index 95ed160..ddc433f 100644
--- a/src/KnpU/CodeBattle/Security/Authentication/ApiTokenListener.php
+++ b/src/KnpU/CodeBattle/Security/Authentication/ApiTokenListener.php
@@ -44,9 +44,9 @@ class ApiTokenListener implements ListenerInterface
             return;
         }
 
-        return;
         // format should be "Authorization: token ABCDEFG"
-        $tokenString = 'HARDCODED';
+        $authorizationHeader = $request->headers->get('Authorization');
+        $tokenString = $this->parseAuthorizationHeader($authorizationHeader);
 
         if (!$tokenString) {
             // there's no authentication info for us to process
diff --git a/src/KnpU/CodeBattle/Security/Authentication/ApiTokenProvider.php b/src/KnpU/CodeBattle/Security/Authentication/ApiTokenProvider.php
index b54754a..3567d09 100644
--- a/src/KnpU/CodeBattle/Security/Authentication/ApiTokenProvider.php
+++ b/src/KnpU/CodeBattle/Security/Authentication/ApiTokenProvider.php
@@ -39,16 +39,15 @@ class ApiTokenProvider implements AuthenticationProviderInterface
         // the actual token string value from the header - e.g. ABCDEFG
         $tokenString = $token->getCredentials();
 
-        return;
         // find the ApiToken object in the database based on the TokenString
-        // $apiToken = // todo
+        $apiToken = $this->apiTokenRepository->findOneByToken($tokenString);
 
         if (!$apiToken) {
             throw new BadCredentialsException('Invalid token');
         }
 
         // look up the user based on the ApiToken.userId value
-        // $user = // todo
+        $user = $this->userRepository->find($apiToken->userId);
         if (!$user) {
             throw new \Exception('A token without a user? Some crazy things are happening');
         }
