diff --git a/src/KnpU/CodeBattle/Api/ApiProblem.php b/src/KnpU/CodeBattle/Api/ApiProblem.php
index 16ec1f2..fb03028 100644
--- a/src/KnpU/CodeBattle/Api/ApiProblem.php
+++ b/src/KnpU/CodeBattle/Api/ApiProblem.php
@@ -8,9 +8,11 @@ namespace KnpU\CodeBattle\Api;
 class ApiProblem
 {
     const TYPE_VALIDATION_ERROR = 'validation_error';
+    const TYPE_INVALID_REQUEST_BODY_FORMAT = 'invalid_body_format';
 
     private static $titles = array(
-        self::TYPE_VALIDATION_ERROR => 'There was a validation error'
+        self::TYPE_VALIDATION_ERROR => 'There was a validation error',
+        self::TYPE_INVALID_REQUEST_BODY_FORMAT => 'Invalid JSON format sent',
     );
 
     private $statusCode;
@@ -54,4 +56,12 @@ class ApiProblem
     {
         return $this->statusCode;
     }
+
+    /**
+     * @return string
+     */
+    public function getTitle()
+    {
+        return $this->title;
+    }
 }
diff --git a/src/KnpU/CodeBattle/Api/ApiProblemException.php b/src/KnpU/CodeBattle/Api/ApiProblemException.php
new file mode 100644
index 0000000..5d60d4d
--- /dev/null
+++ b/src/KnpU/CodeBattle/Api/ApiProblemException.php
@@ -0,0 +1,24 @@
+<?php
+
+namespace KnpU\CodeBattle\Api;
+
+use Symfony\Component\HttpKernel\Exception\HttpException;
+
+class ApiProblemException extends HttpException
+{
+    private $apiProblem;
+
+    public function __construct(ApiProblem $apiProblem, \Exception $previous = null, array $headers = array(), $code = 0)
+    {
+        $this->apiProblem = $apiProblem;
+        $statusCode = $apiProblem->getStatusCode();
+        $message = $apiProblem->getTitle();
+
+        parent::__construct($statusCode, $message, $previous, $headers, $code);
+    }
+
+    public function getApiProblem()
+    {
+        return $this->apiProblem;
+    }
+}
diff --git a/src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php b/src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php
index 14378c5..0c56c51 100644
--- a/src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php
+++ b/src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php
@@ -3,6 +3,7 @@
 namespace KnpU\CodeBattle\Controller\Api;
 
 use KnpU\CodeBattle\Api\ApiProblem;
+use KnpU\CodeBattle\Api\ApiProblemException;
 use KnpU\CodeBattle\Controller\BaseController;
 use Silex\Application;
 use Silex\ControllerCollection;
@@ -127,7 +128,11 @@ class ProgrammerController extends BaseController
         $isNew = !$programmer->id;
 
         if ($data === null) {
-            throw new HttpException(400, sprintf('Invalid JSON: '.$request->getContent()));
+            $problem = new ApiProblem(
+                400,
+                ApiProblem::TYPE_INVALID_REQUEST_BODY_FORMAT
+            );
+            throw new ApiProblemException($problem);
         }
 
         // determine which properties should be changeable on this request
